#!/bin/sh

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Add cluster hosts to global $HOSTS
# param 1 should be cluster name
add_cluster_hosts() {
	local CLUSTER="$1"

	# check for cluster in config
	local CLUSTER_LINE="$(echo "$CONF_LINES" | grep -E "^$CLUSTER")"
	if [ -z "$CLUSTER_LINE" ]; then
		HOSTS="$HOSTS $CLUSTER"
	else
		SEEN_CLUSTERS="$SEEN_CLUSTERS $CLUSTER"

		# get hosts from cluster line
		local CLUSTER_LINE_HOSTS="$(echo "$CLUSTER_LINE" | cut -f 2- -d ' ')"

		for HOST in $CLUSTER_LINE_HOSTS; do
			if [ -z "$(echo "$HOSTS" | grep "$HOST")" -a -z "$(echo "$SEEN_CLUSTERS" | grep "$HOST")" ]; then
				add_cluster_hosts "$HOST"
			fi
		done
	fi

}

if [ -z "$1" ]; then
	echo "usage: $0 <clustername>" 1>&2
	exit 1
fi

CLUSTER="$1"
CONF="$HOME/.clusterssh/clusters"

CONF_LINES="$(grep -Ev '(#|^$)' "$CONF")"

# check for cluster in config
CLUSTER_LINE="$(echo "$CONF_LINES" | grep -E "^$CLUSTER")"
if [ -z "$CLUSTER_LINE" ]; then
	echo "cluster $CLUSTER not in config $CONF" 1>&2
	exit 2
fi

# check for existing tmux session of the specified cluster
if [ -n "$(tmux ls | grep "$CLUSTER-cluster")" ]; then
	echo "tmux session $CLUSTER-cluster already exists" 1>&2
	exit 3
fi

# get hosts from cluster line
HOSTS=""
SEEN_CLUSTERS=""
add_cluster_hosts $CLUSTER

# remove leading space
HOSTS="$(echo "$HOSTS" | sed 's/^ //')"

# build tmux commands
# get first host
HOST="$(echo "$HOSTS" | awk '{print $1}')"
# remove first host
HOSTS="$(echo "$HOSTS" | cut -f 2- -d ' ')"

TMUX_COMMANDS="new -s \"$CLUSTER-cluster\" \"ssh $HOST\"\n"

for HOST in $HOSTS
do
	TMUX_COMMANDS="${TMUX_COMMANDS}splitw \"ssh $HOST\"\n"
	TMUX_COMMANDS="${TMUX_COMMANDS}select-layout tiled\n"
done

TMUX_COMMANDS="${TMUX_COMMANDS}set-window-option synchronize-panes on\n"
TMUX_COMMANDS="${TMUX_COMMANDS}at -t \"$CLUSTER-cluster\"\n"

TMPFILE="$(mktemp /tmp/tmux-cluster-XXXXXXXXXXXX)"

echo "$TMUX_COMMANDS" > "$TMPFILE"
tmux source-file "$TMPFILE"
rm "$TMPFILE"
